name: Build GoogleSMSV2 Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: "Build Project and publish"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
          includePrerelease: true
      - name: Setup .NET Core SDK 9.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.x
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Tag Repository
        uses: avakar/tag-and-release@v1
        if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/heads/main')
        with:
          tag_name: v${{ steps.gitversion.outputs.MajorMinorPatch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    name: release new version
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
          includePrerelease: true
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          build-args: |
            REGISTRY_USER=${{ secrets.REGISTRY_USER }}
            REGISTRY_TOKEN=${{ secrets.REGISTRY_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
